<div id="preamble">
	<h2>Projects</h2>
	  <p>
	  </p>
</div>
<%= partial('shared/paypal.html.erb') %>
<div class="section">
  <h2>Benchmarking CI</h2>
    <p>   
    Ruby on Rails should have an official full-stack benchmarking suite that developers can work against. Each commit would automatically trigger this process, either locally or remotely, and developers would be able to keep track of the impact their changes had on the framework's performance. In the most basic form, this would be a kind of performance-oriented continuous integration (CI). ne hypothetical example would be a server (maybe AWS) that would nightly run the all the benchmarks and compare them to the previously gathered data, being able to assert if there were any performance regressions/improvements in the recent changes. Developers would be notified if anything went wrong and would be able to get a good overview over the performance evolution over time, after each commit.
  </p>
  <div class="peeps">
    <div class="student">
      <img src="/images/bios/gsilva.png" />
      <ul>
        <li>Gonçalo Silva</li>
        <li>Student</li>
        <li>Porto, Portugal</li>
        <li>@goncalossilva</li> 
      </ul> 
      <div class="bio">
        <p>
          Bio: I'm a soon-to-be software engineer from Portugal who's always been interested in performance. I started using Ruby on Rails in 2007 as part of a college project. A couple of months later, RoR was my first choice for almost every web project. I currently work for Tecla Colorida, the creators of http://escolinhas.pt. In February 2010, I began my master's thesis, entitled Scaling Rails: A System-Wide Approach to Performance Optimization, mixing my passion for Rails with my mild obsession with performance.
        </p>
        <p>
          I spend most of my free time tweaking open source projects, from operating systems to graphical user interfaces. I also avoid being a full-time geek by going out with friends, discovering new places, meeting new people and watching some TV shows (oh, wait, that is a geek thing...). You can learn more about me by visiting my website, taking a peak at my Rails-oriented blog, or following me on twitter.
        </p>
      </div>
    </div>
    <div class="mentor">
      <img src="/images/bios/ykatz.png" />
      <ul>
        <li>Yehuda Katz</li>
        <li>Mentor</li>
        <li>San Francisco, CA</li>
        <li>@wykatz</li> 
      </ul> 
      <div class="bio">
        <p>
          Bio: Yehuda Katz is currently employed by Engine Yard, and works full time as a Core Team Member on the Rails project. He is the co-author of jQuery in Action and the upcoming Rails 3 in Action, and is a contributor to Ruby in Practice. He spends most of his time hacking on Rails, but also on other Ruby community projects, like Rubinius and Datamapper. And when the solution doesn't yet exist, he'll try his hand at creating one - as such, he's also created projects like Thor and DO.rb.
        </p>
      </div>        
    </div>
    <div class="mentor">
      <img src="/images/bios/gmathieson.png" />
      <ul>
        <li>Graeme Mathieson</li>
        <li>Mentor</li>
        <li>Edinburgh, Scotland</li>
        <li>@mathie</li> 
      </ul>   
      <div class="bio">
        <p>
          Bio: Graeme has been making a nuisance of himself on the Internet and in various open source communities since 1992 when he managed to blag a 9k6 modem from school. He didn't discover Ruby until late 2005 when he was frustrated with Zope (Python's only web framework at the time) and heard about this thing called Rails. Graeme was so impressed with Rails (and Ruby) that he quit his day job and started his own company, Rubaidh, so he could work with it full time. Since then he's worked with a variety of companies ‚ from tiny startups to household names‚ using Ruby to deliver reliable, usable, secure software. He also helps organise the Scottish Ruby Conference and founded the Scottish Ruby User Group so he likes to think he's quite community focused. More than 4 years later, he still loves working with Ruby (and Rails). His attention span isn't usually that long, so it must be good stuff.
        </p>
      </div>      
    </div>
  </div>
</div>